name: myapp
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.0-152

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  # Logger is a simple but powerful logging framework for dart and flutter,
  # allowing for easy debugging with various log levels and customizable outputs.
  logger: ^2.3.0

  # flutter_mobx provides the Flutter bindings for MobX, a library for reactively managing the state of your applications.
  # It includes widgets like Observer that automatically rebuild when observable state changes.
  flutter_mobx: ^2.2.1+1

  # MobX is a state-management library that makes it simple to connect the reactive data of your application with the UI.
  # This is the core package that contains the fundamental concepts like observables, computed values, and actions.
  mobx: ^2.3.3+2

  # easy_localization simplifies the internationalization and localization processes in Flutter applications.
  # It allows loading and using translations from JSON files and provides utilities for locale management.
  easy_localization: ^3.0.7

  # get_it is a simple Service Locator for Dart and Flutter projects with some additional goodies.
  # It can be used instead of InheritedWidget or Provider to access objects from your UI.
  get_it: ^7.7.0

  # Provider is a wrapper around InheritedWidget to make them easier to use and more reusable.
  # It's used for efficiently propagating a value down the widget tree and rebuilding only widgets that depend on it.
  provider: ^6.1.2

  # cached_network_image provides a widget to load and cache network images.
  # It can also be used with a placeholder and error widgets, while the image is loading or if there's an error.
  cached_network_image: ^3.3.1

  # flutter_dotenv loads configuration at runtime from a .env file.
  # It helps manage environment-specific settings and sensitive information
  # like API keys without hardcoding them into the source code.
  flutter_dotenv: ^5.1.0

  json_serializable: ^6.8.0
  json: ^0.20.2
  google_fonts: ^6.2.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  build_runner: ^2.4.11
  mobx_codegen: ^2.6.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
